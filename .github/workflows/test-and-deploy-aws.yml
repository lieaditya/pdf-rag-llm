name: Python CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r image/requirements.txt --use-deprecated=legacy-resolver

      - name: Install local package
        run: pip install -e .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Start FastAPI server in background
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          TABLE_NAME: RagCdkInfraStack-RagQueryTableB04F0F4B-1MKZHSIFVPQDN
        run: |
          nohup uvicorn api_handler:app --host 0.0.0.0 --port 8000 > server.log 2>&1 &
          sleep 5
        working-directory: ./image/src

      - name: Run tests
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        run: pytest -vs || (cat image/src/server.log && false)

  deploy:
    needs: test

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4


      - name: Set up Docker
        uses: docker/setup-buildx-action@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install AWS CDK CLI
        run: npm install -g aws-cdk typescript

      - name: Install CDK project dependencies
        run: npm install
        working-directory: ./rag-cdk-infra

      - name: Deploy using CDK
        run: cdk deploy --require-approval never
        working-directory: ./rag-cdk-infra
